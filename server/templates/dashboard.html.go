// Code generated by qtc from "dashboard.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package templates

import "github.com/jtarchie/sqlite-chat/services"

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

func StreamDashboard(qw422016 *qt422016.Writer,
	user *services.UserService,
	channel *services.ChannelService,
) {
	qw422016.N().S(`
<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@next/css/pico.min.css" />
  <title>Hello, world!</title>
  <style>
    header.container {
      position: sticky;
      padding: 0;
    }

    main.container {
      padding: 0;
      display: grid;
      grid-template-columns: 10rem 1fr;
      height: calc(100vh - 87px);
      overflow: hidden;
    }

    main.container>aside,
    main.container>.contents {
      overflow-y: auto;
    }

    main.container>.contents {
      display: grid;
      grid-template-rows: 1fr auto;
      overflow: hidden;
    }

    main.container>.contents>.scrollable {
      overflow-y: auto;
    }

    main.container>.contents>.scrollable {
      height: 2rem;
    }
  </style>
</head>

<body>
  <header class="container">
    <nav>
      <ul>
        <li><strong>Chat App</strong></li>
      </ul>
      <ul>
        <li>
          <form role="search">
            <input type="search" placeholder="Search" aria-label="Search">
            <input type="submit" value="🔍">
          </form>
        </li>
      </ul>
    </nav>
  </header>
  <main class="container">
    <aside>
      <nav>
        <details>
          <summary>
            Channels
          </summary>
          <ul>
            `)
	channels, _ := user.OccupiedChannels()

	qw422016.N().S(`
            `)
	for _, channel := range channels {
		qw422016.N().S(`
            <li><a href="/channels/`)
		qw422016.N().D(channel.ID)
		qw422016.N().S(`">`)
		qw422016.E().S(channel.Name)
		qw422016.N().S(`</a></li>
            `)
	}
	qw422016.N().S(`
          </ul>
        </details>
        <details>
          <summary>
            Direct Messages
          </summary>
          <ul>
            <li>Example #1</li>
            <li>Example #2</li>
            <li>Example #3</li>
            <li>Example #4</li>
            <li>Example #5</li>
            <li>Example #6</li>
            <li>Example #7</li>
          </ul>
        </details>
      </nav>
    </aside>
    <div class="contents">
      <div class="scrollable-content">

      </div>
      <div class="sticky-bottom">
        <textarea placeholder="Message"></textarea>
      </div>
    </div>
  </main>
</body>

</html>
`)
}

func WriteDashboard(qq422016 qtio422016.Writer,
	user *services.UserService,
	channel *services.ChannelService,
) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	StreamDashboard(qw422016, user, channel)
	qt422016.ReleaseWriter(qw422016)
}

func Dashboard(
	user *services.UserService,
	channel *services.ChannelService,
) string {
	qb422016 := qt422016.AcquireByteBuffer()
	WriteDashboard(qb422016, user, channel)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
